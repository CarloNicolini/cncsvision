set(VOLUMETRIC_HELICOID_ALP_HDR MainWindow.h VolumetricHelicoidWidgetALP.h)
set(VOLUMETRIC_HELICOID_ALP_SRC volumetricHelicoidSimulatorALP.cpp MainWindow.cpp  VolumetricHelicoidWidgetALP.cpp )
set(VOLUMETRIC_HELICOID_ALP_FORMS "MainWindow.ui")
#set(VOLUMETRIC_HELICOID_ALP_RESOURCES "")
link_libraries(${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY} ${Boost_LIBRARIES} Core Experiment GLViz)

#QT4_ADD_RESOURCES( VOLUMETRIC_HELICOID_ALP_RESOURCES_SOURCES ${VOLUMETRIC_HELICOID_ALP_RESOURCES} )
QT4_WRAP_UI( VOLUMETRIC_HELICOID_ALP_FORMS_HEADERS ${VOLUMETRIC_HELICOID_ALP_FORMS} )
QT4_WRAP_CPP( VOLUMETRIC_HELICOID_ALP_HEADERS_MOC ${VOLUMETRIC_HELICOID_ALP_HDR} )

include_directories(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${QT_INCLUDES})

add_executable(VolumetricHelicoidSimulatorALP WIN32 MACOSX_BUNDLE ${VOLUMETRIC_HELICOID_ALP_SRC} ${VOLUMETRIC_HELICOID_ALP_HDR} ${VOLUMETRIC_HELICOID_ALP_HEADERS_MOC}
	${VOLUMETRIC_HELICOID_ALP_RESOURCES_SOURCES} ${VOLUMETRIC_HELICOID_ALP_FORMS_HEADERS} ${VOLUMETRIC_ALP_HELICOID_RCS} )
#set_target_properties(VolumetricHelicoidSimulatorALP PROPERTIES LINK_FLAGS_RELWITHDEBINFO "/SUBSYSTEM:CONSOLE")
#set_target_properties(VolumetricHelicoidSimulatorALP PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:CONSOLE")
#set_target_properties(VolumetricHelicoidSimulatorALP PROPERTIES LINK_FLAGS_DEBUG "/SUBSYSTEM:CONSOLE")
if (WIN32)
target_link_libraries(VolumetricHelicoidSimulatorALP ${QT_LIBRARIES} Core Experiment GLViz ${GL_LIBS} ALPProjector ${ALP_LIBRARY})
endif(WIN32)

if (NOT WIN32)
target_link_libraries(VolumetricHelicoidSimulatorALP ${QT_LIBRARIES} Core Experiment GLViz ${GL_LIBS} )
endif(NOT WIN32)